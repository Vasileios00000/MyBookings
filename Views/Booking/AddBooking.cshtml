@model MyBookings.ViewModels.AddBookingViewModel

@{
    ViewBag.Title = "AddBooking";
}

<h2>Add a new Booking</h2>


@using (Html.BeginForm("SaveBooking", "Booking"))
{
    @Html.AntiForgeryToken()


<div class="form-horizontal">
    <h4>AddBookingViewModel</h4>
    <hr />
    @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@

    <div class="form-group">
        @Html.LabelFor(model => model.Properties, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(Model => Model.PropertyId,
                    new SelectList(Model.Properties, "Id", "Name"),
                    "Select Property",
                    new { @class = "form-control" })

            @Html.ValidationMessageFor(model => model.Properties, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CheckIn, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CheckIn, new { htmlAttributes = new { @id = "startDate", @type = "text" } })
        </div>

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CheckOut, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CheckOut, new { htmlAttributes = new { @id = "endDate", @type = "text" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Guests, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Guests, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Guests, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WebSite, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WebSite, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WebSite, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ArrivalDetails, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.ArrivalDetails, new { @class = "form-control", @cols = 30, @rows = 2 })
            @Html.ValidationMessageFor(model => model.ArrivalDetails, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Notes, new { @class = "form-control", @cols = 30, @rows = 2 })
            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")



    <script>

        //gijgo
        //without the maxDate attribute
        var today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());

        window.onload = function () {
            var item1 = document.getElementById('startDate');
            item1.value = 'Arrival Date';
             var item2 = document.getElementById('endDate');
            item2.value = 'Departure Date';
        }

        $('#startDate').datepicker({
        uiLibrary: 'bootstrap4',
        iconsLibrary: 'fontawesome',
        minDate: today,
            maxDate: function () {
                console.log('ok');
        }
        });

        $('#endDate').datepicker({
        uiLibrary: 'bootstrap4',
        iconsLibrary: 'fontawesome',
        minDate: function () {
        return $('#startDate').val();
        }
        });

    </script>


}
